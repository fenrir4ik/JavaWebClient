
package client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Orders", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Orders {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addOrder", targetNamespace = "http://services/", className = "client.AddOrder")
    @ResponseWrapper(localName = "addOrderResponse", targetNamespace = "http://services/", className = "client.AddOrderResponse")
    @Action(input = "http://services/Orders/addOrderRequest", output = "http://services/Orders/addOrderResponse")
    public boolean addOrder(
        @WebParam(name = "arg0", targetNamespace = "")
        Order arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteOrder", targetNamespace = "http://services/", className = "client.DeleteOrder")
    @ResponseWrapper(localName = "deleteOrderResponse", targetNamespace = "http://services/", className = "client.DeleteOrderResponse")
    @Action(input = "http://services/Orders/deleteOrderRequest", output = "http://services/Orders/deleteOrderResponse")
    public void deleteOrder(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "changeOrder", targetNamespace = "http://services/", className = "client.ChangeOrder")
    @ResponseWrapper(localName = "changeOrderResponse", targetNamespace = "http://services/", className = "client.ChangeOrderResponse")
    @Action(input = "http://services/Orders/changeOrderRequest", output = "http://services/Orders/changeOrderResponse")
    public void changeOrder(
        @WebParam(name = "arg0", targetNamespace = "")
        Order arg0);

    /**
     * 
     * @return
     *     returns java.util.List<client.Order>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrders", targetNamespace = "http://services/", className = "client.GetOrders")
    @ResponseWrapper(localName = "getOrdersResponse", targetNamespace = "http://services/", className = "client.GetOrdersResponse")
    @Action(input = "http://services/Orders/getOrdersRequest", output = "http://services/Orders/getOrdersResponse")
    public List<Order> getOrders();

    /**
     * 
     * @param arg0
     * @return
     *     returns client.Order
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrderDetails", targetNamespace = "http://services/", className = "client.GetOrderDetails")
    @ResponseWrapper(localName = "getOrderDetailsResponse", targetNamespace = "http://services/", className = "client.GetOrderDetailsResponse")
    @Action(input = "http://services/Orders/getOrderDetailsRequest", output = "http://services/Orders/getOrderDetailsResponse")
    public Order getOrderDetails(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
